library(shiny)
# Define UI for application that draws a histogram
fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
library(shiny)
# Define server logic required to draw a histogram
function(input, output, session) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
}
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
test_data <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
runApp('Server_script')
runApp('Server_script')
rpe_data <- reactive({
invalidateLater(5000)
test_data <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
})
runApp('Server_script')
?sprintf
test_data <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
input$fruit = tmp
input$fruit = "tmp"
input=NULL
input$fruit = "tmp"
input$rating=5
new_entry <- data.frame(Date = as.Date(Sys.Date()), Fruit = input$fruit, Rating = as.numeric(input$rating)) # New input entry
table_data <- reactive({
invalidateLater(5000)
test_data <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
})
sheet_write(data = new_entry,
ss = test_data)
??sheet_write
library(googlesheets4)
sheet_write(data = new_entry,
ss = test_data)
sheet_write(data = new_entry,
ss = test_data)
sheet_write(data = new_entry,
ss = table_data())
sheet_write(data = new_entry,
ss = googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"))
sheet_write(data = write_sheet(new_entry),
ss = googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"))
sheet_write(data = new_entry,
ss = googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"))
str(mtcars)
str(new_entry)
str(ss)
df <- data.frame(
x = 1:3,
y = letters[1:3]
)
# specify only a data frame, get a new Sheet, with a random name
ss <- write_sheet(df)
read_sheet(ss)
ss = googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"))
ss = googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
tmp <- write_sheet(ss)
sheet_write(data = new_entry,
ss = read_sheet(googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")))
sheet_write(data = write_sheet(new_entry),
ss = read_sheet(googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")))
data = write_sheet(new_entry)
ss = read_sheet(googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"))
tmp <- read_sheet(googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"))
ss = googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
sheet_write(data = write_sheet(new_entry),
ss = read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"))
sheet_write(data = write_sheet(new_entry),
ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
sheet_write(data = as.data.frame(new_entry),
ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
options(
gargle_oauth_email = TRUE,
gargle_oauth_cache = "your-app-folder-name/.secrets"
)
googlesheets4::gs4_deauth()
googlesheets4::gs4_auth()
table_data <- reactive({
invalidateLater(5000)
test_data <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
})
sheet_write(data = as.data.frame(new_entry),
ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
sheet_write(data = as.data.frame(new_entry),
ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing"
sheet = "Data")
sheet_write(data = as.data.frame(new_entry),
ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing",
sheet = "Data")
sheet_append(data = as.data.frame(new_entry),
ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing",
sheet = "Data")
observe({
req(input$shinyalert)
if (global$response != FALSE) {
new_entry <- data.frame(Date = as.Date(Sys.Date()), Fruit = input$fruit, Rating = as.numeric(input$rating)) # New input entry
if (nrow(test_data) == 0) {
sheet_write(data = as.data.frame(new_entry),
ss = table_data(),
#ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing",
sheet = "Data")
output$datatable <- renderDT({
rpe_data()
})
} # Renders table as a dataframe
} else {
sheet_append(data = as.data.frame(new_entry),
ss = table_data(),
#ss = "https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing",
sheet = "Data")
output$datatable <- renderDT({
rpe_data()
})
}
global$response <- FALSE # Resets the confirmation button
}) # finish dataframe append
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
response_data <- data.frame(Date = as.Date(Sys.Date()), Fruit = input$fruit, Rating = as.numeric(input$rating)) # New input entry
new_entry <- reactive({
response_data <- data.frame(Date = as.Date(Sys.Date()), Fruit = input$fruit, Rating = as.numeric(input$rating)) # New input entry
response_data
})
runApp('Server_script')
runApp()
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
?reactive
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp()
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
?invalidateLater
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
test_data <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
exists(table_data_new)
exists(table_data_new())
exists("table_data_new()")
runApp('Server_script')
runApp('Server_script')
test_data_new <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1YEn75uxp6UyXC8mwW1F1f89S0uI_KBdTu-XAD4_riW0/edit?usp=sharing")
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
print(paste(("exists", exists("table_data_new()"))))
print(paste("exists", exists("table_data_new()")))
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
runApp('Server_script')
